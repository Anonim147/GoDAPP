package middleware

import (
	"database/sql"
	"log"
	"os"

	"github.com/joho/godotenv"
	_ "github.com/lib/pq" //TODO: change to another driver and use sqlx
)

func createConnection() *sql.DB {
	err := godotenv.Load(".env")
	if err != nil {
		log.Fatalf("Error loading .env file")
	}

	db, err := sql.Open("postgres", os.Getenv("POSTGRES_URL"))

	if err != nil {
		panic(err)
	}

	return db
}

func createTable(tableName string, db *sql.DB) {
	query := `CREATE TABLE ` + tableName + ` (
		id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		data jsonb NOT NULL
	)`
	_, err := db.Exec(query)
	if err != nil {
		panic(err)
	}
}

func copyToTable(path string, tableName string, db *sql.DB) int64 {

	query := `copy ` + tableName + `(data) from ` + path
	res, err := db.Exec(query)
	if err != nil {
		panic(err)
	}
	rows, err := res.RowsAffected()
	if err != nil {
		panic(err)
	}
	return rows
}
